@model GoncharovTestTask.Models.Employee

@{
    ViewBag.Title = "add";
}

<legend>Сотрудники </legend>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/start/jquery-ui.css">




@using (Html.BeginForm())
{

    <fieldset>

            <div class="editor-label">Имя:</div>
            <div class="form-group ">
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.FirstName, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <br>


        <div class="editor-label">
            Фамилия:
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SecondName)
        </div>
        <div class="editor-label">
            Возраст:
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Age)
        </div>


        @using (Html.BeginForm("add", "Employee", FormMethod.Post))
        {
            <div class="editor-label">
                Отдел:
            </div>
            <p>
                @Html.DropDownList("Department", "Выберите отдел")
            </p>
            <div class="editor-label">
                Язык:
            </div>
            <p>
                @Html.DropDownList("Language", "Выберите язык")
            </p>
        }

        <p></p>
        <p>
            <input type="submit" value="Добавить и вернуться назад" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Вернуться назад без добавления", "employee")
</div>



@section scripts{


    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script>
        $(document).ready(function () {
            $("#FirstName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Employee/GetFirstName",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.FirstName, value: item.FirstName };
                            }))

                        }
                    })
                },
                messages: {
                    noResults: "",
                    results: function (count) {
                        return count + (count > 1 ? ' results' : ' result ') + ' found';
                    }
                }
            });
        })
    </script>

}
